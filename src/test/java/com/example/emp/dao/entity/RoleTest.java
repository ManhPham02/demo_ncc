package com.example.emp.dao.entity;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.Arrays;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;

class RoleTest {

    private Role roleUnderTest;
    private Role roleUnder;

    @BeforeEach
    void setUp() {
        roleUnderTest = new Role(0L, "name", Arrays.asList(new Author(0L, 0L, 0L), new Author(0L, 0L, 0L)), Arrays.asList(new User(0L, "username", "password", "firstName", "lastName", "email", 0, new GregorianCalendar(2020, Calendar.JANUARY, 1).getTime(), "imgUser", Arrays.asList(new Timekeeping(0L, "checkin", "checkout", null, new GregorianCalendar(2020, Calendar.JANUARY, 1).getTime())))));
        roleUnder = new Role();
    }


    @Test
    void getIdTest() {
        // Run the test
        Long result = roleUnderTest.getId();

        // Verify the results
        assertThat(result).isEqualTo(0L);
    }

    @Test
    void getNameTest() {
        // Run the test
        String result = roleUnderTest.getName();

        // Verify the results
        assertThat(result).isEqualTo("name");
    }

    @Test
    void getAuthorsTest() {
        // Run the test
        final List<Author> result = roleUnderTest.getAuthors();

        // Verify the results
        assertThat(result.size()).isEqualTo(2);
        assertThat(result.get(0).getId()).isEqualTo(0L);
        assertThat(result.get(0).getIdUser()).isEqualTo(0L);
    }

    //Test generated by @Data
    @Test
    void testSetId() {
        // Setup
        final Long id = 0L;

        // Run the test
        roleUnder.setId(id);

        // Verify the results
        assertThat(roleUnder.getId()).isEqualTo(0L);
    }

    @Test
    void testSetName() {
        // Setup
        final String name = "name";

        // Run the test
        roleUnder.setName(name);

        // Verify the results
        assertThat(roleUnder.getName()).isEqualTo("name");
    }

    @Test
    void testSetAuthors() {
        // Setup
        final List<Author> authors = Arrays.asList(new Author(0L, 0L, 0L));

        // Run the test
        roleUnder.setAuthors(authors);

        // Verify the results
        assertThat(roleUnder.getAuthors().size()).isEqualTo(1);
        assertThat(roleUnder.getAuthors().get(0).getId()).isEqualTo(0L);
        assertThat(roleUnder.getAuthors().get(0).getIdUser()).isEqualTo(0L);
    }

    //Test generated by @EqualsAndHashCode
    @Test
    void testCanEqual() {
        // Setup
        final Object other = new Object();

        // Run the test
        final boolean result = roleUnderTest.canEqual(other);

        // Verify the results
        assertThat(result).isFalse();
    }

    @Test
    void testCanEqual2() {
        // Setup
        final Object other = null;

        // Run the test
        final boolean result = roleUnderTest.canEqual(other);

        // Verify the results
        assertThat(result).isFalse();
    }

    @Test
    void testCanEqual3() {
        // Setup
        final Object other = new Role(0L, "name", Arrays.asList(new Author(0L, 0L, 0L)));

        // Run the test
        final boolean result = roleUnderTest.canEqual(other);

        // Verify the results
        assertThat(result).isTrue();
    }

    @Test
    void testEquals() {
        // Setup
        final Object o = null;

        // Run the test
        final boolean result = roleUnderTest.equals(o);

        // Verify the results
        assertThat(result).isFalse();
    }

    @Test
    void testEquals2() {
        // Setup
        final Object o = new Object();

        // Run the test
        final boolean result = roleUnderTest.equals(o);

        // Verify the results
        assertThat(result).isFalse();
    }

    @Test
    void testSetUsers() {
        // Setup
        final List<User> users = Arrays.asList(new User(0L, "username", "password", "firstName", "lastName", "email", 0, new GregorianCalendar(2020, Calendar.JANUARY, 1).getTime(), "imgUser", Arrays.asList(new Timekeeping(0L, "checkin", "checkout", null, new GregorianCalendar(2020, Calendar.JANUARY, 1).getTime()))));

        // Run the test
        roleUnder.setUsers(users);

        // Verify the results
        assertThat(roleUnder.getUsers().size()).isEqualTo(1);
        assertThat(roleUnder.getUsers().get(0).getId()).isEqualTo(0L);
        assertThat(roleUnder.getUsers().get(0).getUsername()).isEqualTo("username");
    }

    @Test
    void testGetUsers() {
        // Run the test
        final List<User> result = roleUnderTest.getUsers();

        // Verify the results
        assertThat(result.size()).isEqualTo(1);
        assertThat(result.get(0).getId()).isEqualTo(0L);
        assertThat(result.get(0).getUsername()).isEqualTo("username");
    }
}
